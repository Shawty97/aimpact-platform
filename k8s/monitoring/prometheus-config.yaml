apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: aimpact
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        monitor: 'aimpact-monitor'

    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    # Load rules once and periodically evaluate them
    rule_files:
      - /etc/prometheus/rules/*.yaml

    # A scrape configuration containing endpoints to scrape
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Scrape config for nodes (kubelet)
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

      # Scrape config for Kubernetes service endpoints
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

      # AImpact Application Metrics
      - job_name: 'aimpact-backend'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - aimpact
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app]
          action: keep
          regex: aimpact-backend
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

      - job_name: 'aimpact-voice'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - aimpact
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app]
          action: keep
          regex: aimpact-voice
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

      - job_name: 'aimpact-workflow'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - aimpact
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app]
          action: keep
          regex: aimpact-workflow
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: metrics
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

  prometheus-alerts.yml: |
    groups:
    - name: AImpact Platform Alerts
      rules:
      # Service availability alerts
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.kubernetes_name }} is down"
          description: "Service {{ $labels.kubernetes_name }} in namespace {{ $labels.kubernetes_namespace }} has been down for more than 1 minute."

      # Error rate alerts  
      - alert: HighErrorRate
        expr: sum(rate(aimpact_http_request_errors_total[5m])) by (kubernetes_namespace, kubernetes_name) / sum(rate(aimpact_http_requests_total[5m])) by (kubernetes_namespace, kubernetes_name) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate for {{ $labels.kubernetes_name }}"
          description: "Service {{ $labels.kubernetes_name }} has a high HTTP error rate (> 5%) over the last 5 minutes."

      # Latency alerts
      - alert: HighLatency
        expr: histogram_quantile(0.95, sum(rate(aimpact_http_request_duration_seconds_bucket[5m])) by (kubernetes_namespace, kubernetes_name, le)) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High latency for {{ $labels.kubernetes_name }}"
          description: "Service {{ $labels.kubernetes_name }} has 95th percentile latency above 1 second over the last 5 minutes."
      
      # Workflow failure alerts
      - alert: WorkflowFailures
        expr: sum(rate(aimpact_workflow_executions_total{status="failed"}[5m])) by (workflow_id) > 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Workflow {{ $labels.workflow_id }} is failing"
          description: "Workflow {{ $labels.workflow_id }} has failures in the last 5 minutes."
          
      # Voice service alerts
      - alert: VoiceProcessingErrors
        expr: sum(rate(aimpact_voice_transcriptions_total{status="error"}[5m])) by (provider) > 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Voice processing errors with provider {{ $labels.provider }}"
          description: "Voice service is experiencing errors with provider {{ $labels.provider }} in the last 5 minutes."

